<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
    <title>azmablog</title>
    <subtitle>Writing down my learning process. Probably mainly Rust, and Java...</subtitle>
    <link rel="self" type="application/atom+xml" href="https://blog.azmarach.work/atom.xml"/>
    <link rel="alternate" type="text/html" href="https://blog.azmarach.work/"/>
    <generator uri="https://www.getzola.org/">Zola</generator>
    <updated>2025-10-06T00:00:00+00:00</updated>
    <id>https://blog.azmarach.work/atom.xml</id>
    <entry xml:lang="en">
        <title>Fast Api Replaced By Zola</title>
        <published>2025-10-06T00:00:00+00:00</published>
        <updated>2025-10-06T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://blog.azmarach.work/posts/fast-api-replaced-by-zola/"/>
        <id>https://blog.azmarach.work/posts/fast-api-replaced-by-zola/</id>
        
        <content type="html" xml:base="https://blog.azmarach.work/posts/fast-api-replaced-by-zola/">&lt;h2 id=&quot;created-a-fast-api-blog&quot;&gt;Created a Fast Api Blog&lt;&#x2F;h2&gt;
&lt;p&gt;At first, I thought about building the blog as another Spring microservice. Too heavy, I thought immediately. I already have a basic
website running on Spring Boot and waiting for the containers to fire up just to change a link to this blog, well — why keep the overkill mode on, right?&lt;&#x2F;p&gt;
&lt;div class=&quot;crt scanlines&quot; aria-hidden=&quot;true&quot;&gt;
	&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;2025-10-06T15:29:09.000000000Z [inf]  Starting Container
&lt;&#x2F;span&gt;&lt;span&gt;2025-10-06T15:29:10.740704036Z [inf]  
&lt;&#x2F;span&gt;&lt;span&gt;2025-10-06T15:29:10.740714150Z [inf]    .   ____          _            __ _ _
&lt;&#x2F;span&gt;&lt;span&gt;2025-10-06T15:29:10.740722455Z [inf]   &#x2F;\\ &#x2F; ___&amp;#39;_ __ _ _(_)_ __  __ _ \ \ \ \
&lt;&#x2F;span&gt;&lt;span&gt;2025-10-06T15:29:10.740728764Z [inf]  ( ( )\___ | &amp;#39;_ | &amp;#39;_| | &amp;#39;_ \&#x2F; _` | \ \ \ \
&lt;&#x2F;span&gt;&lt;span&gt;2025-10-06T15:29:10.740734024Z [inf]   \\&#x2F;  ___)| |_)| | | | | || (_| |  ) ) ) )
&lt;&#x2F;span&gt;&lt;span&gt;2025-10-06T15:29:10.740740239Z [inf]    &amp;#39;  |____| .__|_| |_|_| |_\__, | &#x2F; &#x2F; &#x2F; &#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;2025-10-06T15:29:10.740745637Z [inf]   =========|_|==============|___&#x2F;=&#x2F;_&#x2F;_&#x2F;_&#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;2025-10-06T15:29:10.740751725Z [inf]  
&lt;&#x2F;span&gt;&lt;span&gt;2025-10-06T15:29:10.740767721Z [inf]   :: Spring Boot ::                (v3.5.3)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;

&lt;&#x2F;div&gt;
&lt;p&gt;So, what’s the next option? Well, I’m learning Python, and FastAPI
is just… sweet! I went with Python for my blog, and of course, it was a very pleasant experience. I really like FastAPI,
and I’m definitely not the only one. I finished the blog API service in no time. You can check out the repo here: &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;charamzic&#x2F;blogpy-api&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;charamzic&#x2F;blogpy-api&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;You can also check the &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;blogpy-api-production.up.railway.app&#x2F;docs&#x2F;&quot;&gt;swagger&lt;&#x2F;a&gt; - it comes automatically with FastAPI. Don’t try to call the endpoints without an API key, though.&lt;&#x2F;p&gt;
&lt;p&gt;Done. Simple. Fast. Functional. But, as usual, I left it hanging for a while, during which I explored new stuff on the INTERNET!&lt;&#x2F;p&gt;
&lt;h2 id=&quot;created-a-zola-blog&quot;&gt;Created a Zola Blog&lt;&#x2F;h2&gt;
&lt;p&gt;One night, just before falling asleep, I came across this interview. The interview itself wasn’t amazing, but a few things stuck with me.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;nik-rev&quot;&gt;Nik Revenco&lt;&#x2F;a&gt; is a smart guy.&lt;&#x2F;li&gt;
&lt;li&gt;Maybe it&#x27;s time to give &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;helix-editor.com&quot;&gt;Helix&lt;&#x2F;a&gt; another try.&lt;&#x2F;li&gt;
&lt;li&gt;I&#x27;ll write my blog with &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.getzola.org&quot;&gt;Zola&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;iframe
	class=&quot;youtube-embed&quot;
	src=&quot;https:&#x2F;&#x2F;www.youtube-nocookie.com&#x2F;embed&#x2F;AS7mnDgFgnw&quot;
	allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&quot;
	referrerpolicy=&quot;strict-origin-when-cross-origin&quot; allowfullscreen&gt;
&lt;&#x2F;iframe&gt;
&lt;p&gt;I used to have a blog with &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;gohugo.io&quot;&gt;Hugo&lt;&#x2F;a&gt; and working with it was seamless. So why not try something similar?
And that’s what I did. You’re now looking at a Zola blog with the Duckquill theme (links in the footer, btw). I’m writing it in Helix.&lt;&#x2F;p&gt;
&lt;p&gt;These are my first lines, besides copying my &lt;a href=&quot;&#x2F;posts&#x2F;turning-old-macbook-into-an-ubuntu-server-part-1&quot;&gt;old article&lt;&#x2F;a&gt; from Substack. Now I&#x27;m fully commited to writing on
a regular basis... though, let&#x27;s see, considering I possess a strongly developed weak will.&lt;&#x2F;p&gt;
&lt;p&gt;That&#x27;s it. It is still likely that I&#x27;ll use the fast api service at the end, or write something completely different, but for now, let us enjoy Zola.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Turning old McBook into an Ubuntu Server - Part 1</title>
        <published>2025-10-04T00:00:00+00:00</published>
        <updated>2025-10-04T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://blog.azmarach.work/posts/turning-old-macbook-into-an-ubuntu-server-part-1/"/>
        <id>https://blog.azmarach.work/posts/turning-old-macbook-into-an-ubuntu-server-part-1/</id>
        
        <content type="html" xml:base="https://blog.azmarach.work/posts/turning-old-macbook-into-an-ubuntu-server-part-1/">&lt;p&gt;This project is my first step into creating a personal lab where I can start learning DevOps tools and skills, and I’ll walk you through exactly how I got it up and running.&lt;&#x2F;p&gt;
&lt;p&gt;I had an old MacBook Air running elementary OS, which was the perfect machine for this project. Keep in mind that the steps I describe are specific to this MacBook
and may vary on other devices. Also, all commands I use bellow might be specific to my current MackBook which I will be using as a workstation. As a beginner,
there might be more efficient approaches out there, but these steps worked for me. I hope sharing my process helps other DevOps padawans get started with their own home labs.&lt;&#x2F;p&gt;
&lt;p&gt;The laptop I am turning into an Ubuntu Server:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Architecture:&lt;&#x2F;span&gt;&lt;span&gt;             x86_64
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;CPU&lt;&#x2F;span&gt;&lt;span&gt; op-mode(s)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span&gt;         32-bit, 64-bit
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Address&lt;&#x2F;span&gt;&lt;span&gt; sizes:          36 bits physical, 48 bits virtual
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Byte&lt;&#x2F;span&gt;&lt;span&gt; Order:             Little Endian
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;CPU&lt;&#x2F;span&gt;&lt;span&gt;(s)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span&gt;                   4
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;On-line&lt;&#x2F;span&gt;&lt;span&gt; CPU(s) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;list:&lt;&#x2F;span&gt;&lt;span&gt;    0-3
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Vendor&lt;&#x2F;span&gt;&lt;span&gt; ID:                GenuineIntel
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Model&lt;&#x2F;span&gt;&lt;span&gt; name:             Intel(R) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Core&lt;&#x2F;span&gt;&lt;span&gt;(TM) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;i5-2557M&lt;&#x2F;span&gt;&lt;span&gt; CPU @ 1.70GHz
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;CPU&lt;&#x2F;span&gt;&lt;span&gt; family:           6
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Model:&lt;&#x2F;span&gt;&lt;span&gt;                42
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Thread&lt;&#x2F;span&gt;&lt;span&gt;(s) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;per&lt;&#x2F;span&gt;&lt;span&gt; core:   2
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Core&lt;&#x2F;span&gt;&lt;span&gt;(s) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;per&lt;&#x2F;span&gt;&lt;span&gt; socket:   2
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Socket&lt;&#x2F;span&gt;&lt;span&gt;(s)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span&gt;            1
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Stepping:&lt;&#x2F;span&gt;&lt;span&gt;             7
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;CPU&lt;&#x2F;span&gt;&lt;span&gt;(s) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;scaling&lt;&#x2F;span&gt;&lt;span&gt; MHz:   38%
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;CPU&lt;&#x2F;span&gt;&lt;span&gt; max MHz:          2700.0000
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;CPU&lt;&#x2F;span&gt;&lt;span&gt; min MHz:          800.0000
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;part-1-prepare-the-usb-drive&quot;&gt;Part 1: Prepare the USB Drive&lt;&#x2F;h2&gt;
&lt;p&gt;I decided to use a USB drive to boot from. Having an Ubuntu Server installer on a USB is handy. I used a 4GB drive, but to be safe, an 8GB drive might be a better choice.&lt;&#x2F;p&gt;
&lt;p&gt;Start with downloading the Ubuntu Server ISO file. You can find the latest LTS version &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;ubuntu.com&#x2F;download&#x2F;server&quot;&gt;here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Insert a USB drive into your MacBook Air.&lt;&#x2F;li&gt;
&lt;li&gt;Open the Disk Utility app (Applications &amp;gt; Utilities &amp;gt; Disk Utility).&lt;&#x2F;li&gt;
&lt;li&gt;Select your USB drive in the sidebar.&lt;&#x2F;li&gt;
&lt;li&gt;Click on Erase and choose the following options:
&lt;ul&gt;
&lt;li&gt;Format: MS-DOS (FAT)&lt;&#x2F;li&gt;
&lt;li&gt;Scheme: GUID Partition Map&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;Click Erase to format the USB drive.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;create-a-bootable-usb-using-terminal&quot;&gt;Create a Bootable USB Using Terminal&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;Open the Terminal (Applications &amp;gt; Utilities &amp;gt; Terminal) and there, convert the Ubuntu Server ISO to a disk image using following command:&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;hdiutil&lt;&#x2F;span&gt;&lt;span&gt; convert&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; -format&lt;&#x2F;span&gt;&lt;span&gt; UDRW&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; -o ~&lt;&#x2F;span&gt;&lt;span&gt;&#x2F;ubuntu-server.img &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span&gt;&#x2F;Downloads&#x2F;ubuntu-24.04-live-server-amd64.iso
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;You will need to replace the path with the actual one that you downloaded the ISO file into and also double check the name of the downloaded file as you might have a different version.&lt;&#x2F;p&gt;
&lt;p&gt;You should get output similar to this:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Reading&lt;&#x2F;span&gt;&lt;span&gt; Protective Master Boot Record (MBR : 0)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;…
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Reading&lt;&#x2F;span&gt;&lt;span&gt; GPT Header (Primary GPT Header : 1)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;…
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Reading&lt;&#x2F;span&gt;&lt;span&gt; GPT Partition Data (Primary GPT Table : 2)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;…
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Reading&lt;&#x2F;span&gt;&lt;span&gt; ISO9660 (DOS_FAT : 3)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;…
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;.............................................................................................................................................................
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Reading&lt;&#x2F;span&gt;&lt;span&gt; Appended2 (C12A7328-F81F-11D2-BA4B-00A0C93EC93B : 4)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;…
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;.............................................................................................................................................................
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Reading&lt;&#x2F;span&gt;&lt;span&gt; Gap1 (DOS_FAT : 5)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;…
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;.............................................................................................................................................................
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Reading&lt;&#x2F;span&gt;&lt;span&gt; Ubuntu-Server 24.04 LTS amd64    (Apple_ISO : 6)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;…
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;.............................................................................................................................................................
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Reading&lt;&#x2F;span&gt;&lt;span&gt; GPT Partition Data (Backup GPT Table : 7)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;…
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;.............................................................................................................................................................
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Reading&lt;&#x2F;span&gt;&lt;span&gt; GPT Header (Backup GPT Header : 8)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;…
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Elapsed&lt;&#x2F;span&gt;&lt;span&gt; Time:  3.760s
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Speed:&lt;&#x2F;span&gt;&lt;span&gt; 698.6MB&#x2F;s
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Savings:&lt;&#x2F;span&gt;&lt;span&gt; 0.0%
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;created:&lt;&#x2F;span&gt;&lt;span&gt; &#x2F;Users&#x2F;honza&#x2F;ubuntu-server.img.dmg
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;As you can see at the bottom, the image is ready.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Now, let&#x27;s find the identifier of our USB drive, which we will need in next step:&lt;br &#x2F;&gt;
&lt;code&gt;diskutil list&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;You should see your drive listed along with the others, identified by the name you assigned to it earlier. Copy or remember the IDENTIFIER (disk4 in my case):&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;&#x2F;dev&#x2F;disk4&lt;&#x2F;span&gt;&lt;span&gt; (external, physical)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;#:                       TYPE NAME                    SIZE       IDENTIFIER
&lt;&#x2F;span&gt;&lt;span&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;0:&lt;&#x2F;span&gt;&lt;span&gt;      GUID_partition_scheme                        *4.0 GB     disk4
&lt;&#x2F;span&gt;&lt;span&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;1:&lt;&#x2F;span&gt;&lt;span&gt;                        EFI EFI                     209.7 MB   disk4s1
&lt;&#x2F;span&gt;&lt;span&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;2:&lt;&#x2F;span&gt;&lt;span&gt;       Microsoft Basic Data UBUNTU SERV             3.8 GB     disk4s2
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ul&gt;
&lt;li&gt;Unmount the USB drive. Don&#x27;t forget adjusting the identifier to match your own:&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;diskutil&lt;&#x2F;span&gt;&lt;span&gt; unmountDisk &#x2F;dev&#x2F;disk4
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Unmounting ensures that no other processes are accessing the disk. This guarantees that the entire disk space is available for the image writing process.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;writing-the-disk-image-to-the-usb-drive&quot;&gt;Writing the disk image to the USB drive&lt;&#x2F;h3&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span&gt; dd if=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span&gt;&#x2F;ubuntu-server.img.dmg of=&#x2F;dev&#x2F;rdisk4 bs=1m
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;If all went well, you should see output like this:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;2627+1&lt;&#x2F;span&gt;&lt;span&gt; records in
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;2627+1&lt;&#x2F;span&gt;&lt;span&gt; records out
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;2754981888&lt;&#x2F;span&gt;&lt;span&gt; bytes transferred in 478.478979 secs (5757791 bytes&#x2F;sec)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;The &lt;strong&gt;2627+1 records in&lt;&#x2F;strong&gt; and &lt;strong&gt;2627+1 records out&lt;&#x2F;strong&gt; lines show that &lt;strong&gt;dd&lt;&#x2F;strong&gt; processed the expected number of data blocks, and the &lt;strong&gt;2754981888 bytes transferred&lt;&#x2F;strong&gt; confirms that the full size of the image was written.&lt;&#x2F;p&gt;
&lt;p&gt;The dd command is used to write an image file (like an .iso or .img) directly to a storage device, such as a USB drive. This process is crucial for creating a bootable installation media.&lt;&#x2F;p&gt;
&lt;p&gt;An ISO file is a disk image that contains the filesystem and bootable information needed to install an OS. However, certain tools or installations might require converting this to a different format (like .img).&lt;&#x2F;p&gt;
&lt;p&gt;In many cases, you can use an ISO file directly to create bootable media. Tools like &lt;strong&gt;Rufus&lt;&#x2F;strong&gt; (for Windows) or &lt;strong&gt;Etcher&lt;&#x2F;strong&gt; (for cross-platform) can handle ISO files directly and write them to USB drives in a bootable format.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Anyway, when the process completes, eject the USB drive:&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;diskutil&lt;&#x2F;span&gt;&lt;span&gt; eject &#x2F;dev&#x2F;diskN
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Now that the bootable USB drive has been created, you can proceed with the installation of Ubuntu Server on your old laptop.&lt;&#x2F;p&gt;
&lt;blockquote class=&quot;markdown-alert-important&quot;&gt;
&lt;p&gt;See part 2
&lt;a href=&quot;&#x2F;posts&#x2F;turning-old-macbook-into-an-ubuntu-server-part-2&#x2F;&quot;&gt;Turning old McBook into an Ubuntu Server - Part 2&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;div class=&quot;buttons centered&quot;&gt;
  &lt;a class=&quot;big colored&quot; href=&quot;#top&quot;&gt;Go to Top&lt;&#x2F;a&gt;
&lt;&#x2F;div&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Turning old McBook into an Ubuntu Server - Part 2</title>
        <published>2025-10-04T00:00:00+00:00</published>
        <updated>2025-10-04T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://blog.azmarach.work/posts/turning-old-macbook-into-an-ubuntu-server-part-2/"/>
        <id>https://blog.azmarach.work/posts/turning-old-macbook-into-an-ubuntu-server-part-2/</id>
        
        <content type="html" xml:base="https://blog.azmarach.work/posts/turning-old-macbook-into-an-ubuntu-server-part-2/">&lt;h2 id=&quot;install-ubuntu-server-on-your-old-laptop&quot;&gt;Install Ubuntu Server on your old laptop&lt;&#x2F;h2&gt;
&lt;p&gt;Since my only internet connection is an unstable Wi-Fi, I encountered some challenges during the installation process, which I’ll cover later. If you have access to a wired connection, I recommend using it for a more stable experience.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Insert the bootable USB drive into your old laptop.&lt;&#x2F;li&gt;
&lt;li&gt;Start&#x2F;Restart the laptop and enter the BIOS&#x2F;UEFI settings by holding an option key.&lt;&#x2F;li&gt;
&lt;li&gt;Set the USB drive as the primary boot device.&lt;&#x2F;li&gt;
&lt;li&gt;Save and exit BIOS settings. The laptop should boot from the USB drive and start the Ubuntu Server installation process.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;installer&quot;&gt;Installer&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;When the Ubuntu Server installer appears, select your language and press Enter.&lt;&#x2F;li&gt;
&lt;li&gt;Follow the prompts to configure your keyboard layout.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;I chose English for both the language and keyboard layout. However, if you’re using a Wi-Fi connection like I did and your Wi-Fi network name or password includes characters specific to your language, make sure to select your language accordingly.&lt;&#x2F;p&gt;
&lt;p&gt;If you’re using a wired connection, the setup will likely be straightforward. For Wi-Fi, select your visible network from the configuration screen and enter the password.&lt;&#x2F;p&gt;
&lt;p&gt;There’s an option to skip setting up the internet connection, which would delay downloading updates during the installation. However, since I was using Wi-Fi, the installation attempted to download updates and failed repeatedly. Checking the logs, I found that the errors were related to HTTP, likely due to an unstable connection. The laptop kept losing the Wi-Fi signal during the installation and package downloads. To resolve this, I moved closer to the router (in another room) to ensure a stronger signal, which allowed the installation to complete successfully.&lt;&#x2F;p&gt;
&lt;p&gt;If you encounter similar issues, you can access a terminal prompt by pressing &lt;strong&gt;Ctrl+Alt+F2&lt;&#x2F;strong&gt;. Check the logs in &lt;strong&gt;&#x2F;var&#x2F;log&lt;&#x2F;strong&gt; and inspect them using tools like &lt;strong&gt;less&lt;&#x2F;strong&gt; or &lt;strong&gt;vi&lt;&#x2F;strong&gt;, or search for errors with &lt;strong&gt;grep&lt;&#x2F;strong&gt;, for example: &lt;strong&gt;grep -r &quot;error&quot; &#x2F;var&#x2F;log&#x2F;installer&#x2F;&lt;&#x2F;strong&gt;. Since the logs can be lengthy, consider piping the output to less or another pager to make it easier to navigate.&lt;&#x2F;p&gt;
&lt;p&gt;During the installation, you&#x27;ll have the option to install OpenSSH. I recommend selecting this option for easier access to your server. However, if you prefer, you can skip this step and install OpenSSH manually later.&lt;&#x2F;p&gt;
&lt;p&gt;If everything looks good, proceed by following the prompts to complete the installation. Add your server name, username for yourself and a password.&lt;&#x2F;p&gt;
</content>
        
    </entry>
</feed>
